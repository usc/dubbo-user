<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
    default-lazy-init="true">

    <description>Jpa Data配置 </description>

    <!-- Jpa Entity Manager 配置 -->
    <bean id="abstractEntityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" abstract="true">
        <property name="packagesToScan" value="com.alibaba.dubbo.user.provider.model" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <!-- 命名规则 My_NAME->MyName -->
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
            </props>
        </property>
    </bean>
    <bean id="db1EntityManagerFactory" parent="abstractEntityManagerFactory">
        <property name="dataSource" ref="db1DataSource" />
    </bean>
    <bean id="db2EntityManagerFactory" parent="abstractEntityManagerFactory">
        <property name="dataSource" ref="db2DataSource" />
    </bean>

    <!-- Jpa 事务配置 -->
    <bean id="db1TransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="db1EntityManagerFactory" />
    </bean>
    <bean id="db2TransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="db2EntityManagerFactory" />
    </bean>

    <!-- Spring Data Jpa配置 -->
    <jpa:repositories base-package="com.alibaba.dubbo.user.provider.dao.db1" transaction-manager-ref="db1TransactionManager" entity-manager-factory-ref="db1EntityManagerFactory" />
    <jpa:repositories base-package="com.alibaba.dubbo.user.provider.dao.db2" transaction-manager-ref="db2TransactionManager" entity-manager-factory-ref="db2EntityManagerFactory" />

    <!-- 使用annotation定义事务 -->
    <!-- <tx:annotation-driven transaction-manager="db1TransactionManager" proxy-target-class="true" /> -->
    <!-- <tx:annotation-driven transaction-manager="db2TransactionManager" proxy-target-class="true" /> -->

    <!-- 数据源 -->
    <bean id="abstractDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" abstract="true">
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="20" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <!-- <property name="poolPreparedStatements" value="true" /> -->
        <!-- <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->

        <!-- 配置监控统计拦截的filters -->
        <!-- <property name="filters" value="mergeStat" /> -->
    </bean>

    <context:property-placeholder ignore-unresolvable="true" location="classpath*:/dataSource.properties" />

    <bean id="db1DataSource" parent="abstractDataSource">
        <property name="url" value="${db1.url}" />
        <property name="username" value="${db1.username}" />
        <property name="password" value="${db1.password}" />
    </bean>

    <bean id="db1JdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="db1DataSource" />
    </bean>

    <bean id="db2DataSource" parent="abstractDataSource">
        <property name="url" value="${db2.url}" />
        <property name="username" value="${db2.username}" />
        <property name="password" value="${db2.password}" />
    </bean>

</beans>
